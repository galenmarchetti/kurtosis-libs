version: 2.1

executors:
  ubuntu_vm:
    machine:
      image: ubuntu-1604:202007-01
      # DO NOT USE THIS YET! This costs 200 credits *per job run* so is extremely expensive for the free plan, but we can turn it on one day if we get more credits
      # docker_layer_caching: true

# NOTE: Because CircleCI jobs run on separate machines from each other, we duplicate steps (like checkout) between jobs. This is because doing the "correct" DRY
#  refactoring of, "one job for checkout, one job for build Docker image, etc." would require a) persisting files between jobs and b) persisting Docker images between
#  jobs. Both are annoying (saving/loading workspaces require re-downloading the workspace over the network, and there doesn't seem to be a good way to do Docker
#  images), so we run everything inside a single job.
# See also: https://discuss.circleci.com/t/can-docker-images-be-preserved-between-jobs-in-a-workflow-without-a-manual-load-save/23388/12
jobs:
  validate:
    executor: ubuntu_vm
    steps:
      - checkout

      # Gotchas I discovered when writing this:
      # - Without the '--no-pager' flag, Git will print "WARNING: Terminal is not fully functional" and not display any output
      # - Circle has no way of getting the PR base branch, so we have to hardcode develop :( See: https://ideas.circleci.com/cloud-feature-requests/p/provide-env-variable-for-branch-name-targeted-by-pull-request
      # - The --exit-code flag to git-diff returns 0 on no changes, 1 on changes
      # - We have to use 'origin/develop' rather than 'develop' because Circle does a shallow checkout, and 'develop' gets set to something weird and wrong that makes the check buggy
      - run: "! git --no-pager diff --exit-code origin/develop...HEAD CHANGELOG.md > /dev/null"
      
      - run: bash .circleci/validate-all-testsuites.sh "${DOCKER_USERNAME}" "${DOCKER_PASSWORD}" "${KURTOSIS_INTERNAL_CLIENT_ID}" "${KURTOSIS_INTERNAL_CLIENT_SECRET}"

  push_docker_image:
    executor: ubuntu_vm
    steps:
      - checkout
      - run: bash .circleci/build-and-push-example-images.sh "${DOCKER_USERNAME}" "${DOCKER_PASSWORD}" "<<pipeline.git.tag>>"

  push_rust_lib:
    docker:
      # TODO sync up this Rust version with the version of the ekidd/rust-musl-builder Docker image that builds the testsuite!!
      - image: cimg/rust:1.50.0
    steps:
      - checkout
      - run: cargo login "${CRATES_IO_ACCESS_TOKEN}"
      - run: |
          cd rust/lib  # Need to be inside the 'lib' directory to publish the lib
          cargo publish

workflows:
  build:
    jobs:
      - validate:
          context:
            - docker-user
            - kurtosis-user
          filters:
            branches:
              ignore:
                - develop
                - master
      - push_docker_image:
          context:
            - docker-user
            - kurtosis-user
          filters:
            branches:
              ignore: /.*/
            tags: 
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
      - push_rust_lib:
          context:
            - crates.io-user
          filters:
            branches:
              ignore: /.*/
            tags: 
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
