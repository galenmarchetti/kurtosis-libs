// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: suite_metadata_serializing_service.proto

package generated

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TestSuiteMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetadataFilepath string                   `protobuf:"bytes,1,opt,name=metadata_filepath,json=metadataFilepath,proto3" json:"metadata_filepath,omitempty"`
	NetworkWidthBits uint32                   `protobuf:"varint,2,opt,name=network_width_bits,json=networkWidthBits,proto3" json:"network_width_bits,omitempty"`
	TestMetadata     map[string]*TestMetadata `protobuf:"bytes,3,rep,name=test_metadata,json=testMetadata,proto3" json:"test_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TestSuiteMetadata) Reset() {
	*x = TestSuiteMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suite_metadata_serializing_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestSuiteMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSuiteMetadata) ProtoMessage() {}

func (x *TestSuiteMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_suite_metadata_serializing_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSuiteMetadata.ProtoReflect.Descriptor instead.
func (*TestSuiteMetadata) Descriptor() ([]byte, []int) {
	return file_suite_metadata_serializing_service_proto_rawDescGZIP(), []int{0}
}

func (x *TestSuiteMetadata) GetMetadataFilepath() string {
	if x != nil {
		return x.MetadataFilepath
	}
	return ""
}

func (x *TestSuiteMetadata) GetNetworkWidthBits() uint32 {
	if x != nil {
		return x.NetworkWidthBits
	}
	return 0
}

func (x *TestSuiteMetadata) GetTestMetadata() map[string]*TestMetadata {
	if x != nil {
		return x.TestMetadata
	}
	return nil
}

type TestMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPartitioningEnabled bool `protobuf:"varint,1,opt,name=is_partitioning_enabled,json=isPartitioningEnabled,proto3" json:"is_partitioning_enabled,omitempty"`
	// A map of all the artifacts that the test wants, in the form of:
	//       user-generated artifact ID -> artifact URL
	UsedArtifactUrls map[string]string `protobuf:"bytes,2,rep,name=used_artifact_urls,json=usedArtifactUrls,proto3" json:"used_artifact_urls,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TestMetadata) Reset() {
	*x = TestMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suite_metadata_serializing_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMetadata) ProtoMessage() {}

func (x *TestMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_suite_metadata_serializing_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMetadata.ProtoReflect.Descriptor instead.
func (*TestMetadata) Descriptor() ([]byte, []int) {
	return file_suite_metadata_serializing_service_proto_rawDescGZIP(), []int{1}
}

func (x *TestMetadata) GetIsPartitioningEnabled() bool {
	if x != nil {
		return x.IsPartitioningEnabled
	}
	return false
}

func (x *TestMetadata) GetUsedArtifactUrls() map[string]string {
	if x != nil {
		return x.UsedArtifactUrls
	}
	return nil
}

var File_suite_metadata_serializing_service_proto protoreflect.FileDescriptor

var file_suite_metadata_serializing_service_proto_rawDesc = []byte{
	0x0a, 0x28, 0x73, 0x75, 0x69, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x61, 0x70, 0x69, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x9f, 0x02, 0x0a, 0x11, 0x54, 0x65, 0x73, 0x74, 0x53, 0x75, 0x69, 0x74,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69,
	0x6c, 0x65, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x62, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x42, 0x69, 0x74, 0x73, 0x12, 0x54, 0x0a, 0x0d, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70,
	0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53, 0x75, 0x69,
	0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x74, 0x65,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x59, 0x0a, 0x11, 0x54, 0x65,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe9, 0x01, 0x0a, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x5c,
	0x0a, 0x12, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f,
	0x75, 0x72, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x55, 0x72, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x75, 0x73, 0x65, 0x64,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x73, 0x1a, 0x43, 0x0a, 0x15,
	0x55, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x32, 0x74, 0x0a, 0x1f, 0x53, 0x75, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x53, 0x75, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74,
	0x53, 0x75, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x75, 0x72, 0x74, 0x6f, 0x73, 0x69, 0x73, 0x2d, 0x74,
	0x65, 0x63, 0x68, 0x2f, 0x6b, 0x75, 0x72, 0x74, 0x6f, 0x73, 0x69, 0x73, 0x2d, 0x67, 0x6f, 0x2f,
	0x6c, 0x69, 0x62, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_suite_metadata_serializing_service_proto_rawDescOnce sync.Once
	file_suite_metadata_serializing_service_proto_rawDescData = file_suite_metadata_serializing_service_proto_rawDesc
)

func file_suite_metadata_serializing_service_proto_rawDescGZIP() []byte {
	file_suite_metadata_serializing_service_proto_rawDescOnce.Do(func() {
		file_suite_metadata_serializing_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_suite_metadata_serializing_service_proto_rawDescData)
	})
	return file_suite_metadata_serializing_service_proto_rawDescData
}

var file_suite_metadata_serializing_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_suite_metadata_serializing_service_proto_goTypes = []interface{}{
	(*TestSuiteMetadata)(nil), // 0: api_client.TestSuiteMetadata
	(*TestMetadata)(nil),      // 1: api_client.TestMetadata
	nil,                       // 2: api_client.TestSuiteMetadata.TestMetadataEntry
	nil,                       // 3: api_client.TestMetadata.UsedArtifactUrlsEntry
	(*emptypb.Empty)(nil),     // 4: google.protobuf.Empty
}
var file_suite_metadata_serializing_service_proto_depIdxs = []int32{
	2, // 0: api_client.TestSuiteMetadata.test_metadata:type_name -> api_client.TestSuiteMetadata.TestMetadataEntry
	3, // 1: api_client.TestMetadata.used_artifact_urls:type_name -> api_client.TestMetadata.UsedArtifactUrlsEntry
	1, // 2: api_client.TestSuiteMetadata.TestMetadataEntry.value:type_name -> api_client.TestMetadata
	0, // 3: api_client.SuiteMetadataSerializingService.SerializeSuiteMetadata:input_type -> api_client.TestSuiteMetadata
	4, // 4: api_client.SuiteMetadataSerializingService.SerializeSuiteMetadata:output_type -> google.protobuf.Empty
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_suite_metadata_serializing_service_proto_init() }
func file_suite_metadata_serializing_service_proto_init() {
	if File_suite_metadata_serializing_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_suite_metadata_serializing_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestSuiteMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_suite_metadata_serializing_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_suite_metadata_serializing_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_suite_metadata_serializing_service_proto_goTypes,
		DependencyIndexes: file_suite_metadata_serializing_service_proto_depIdxs,
		MessageInfos:      file_suite_metadata_serializing_service_proto_msgTypes,
	}.Build()
	File_suite_metadata_serializing_service_proto = out.File
	file_suite_metadata_serializing_service_proto_rawDesc = nil
	file_suite_metadata_serializing_service_proto_goTypes = nil
	file_suite_metadata_serializing_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SuiteMetadataSerializingServiceClient is the client API for SuiteMetadataSerializingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SuiteMetadataSerializingServiceClient interface {
	SerializeSuiteMetadata(ctx context.Context, in *TestSuiteMetadata, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type suiteMetadataSerializingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSuiteMetadataSerializingServiceClient(cc grpc.ClientConnInterface) SuiteMetadataSerializingServiceClient {
	return &suiteMetadataSerializingServiceClient{cc}
}

func (c *suiteMetadataSerializingServiceClient) SerializeSuiteMetadata(ctx context.Context, in *TestSuiteMetadata, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/api_client.SuiteMetadataSerializingService/SerializeSuiteMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SuiteMetadataSerializingServiceServer is the server API for SuiteMetadataSerializingService service.
type SuiteMetadataSerializingServiceServer interface {
	SerializeSuiteMetadata(context.Context, *TestSuiteMetadata) (*emptypb.Empty, error)
}

// UnimplementedSuiteMetadataSerializingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSuiteMetadataSerializingServiceServer struct {
}

func (*UnimplementedSuiteMetadataSerializingServiceServer) SerializeSuiteMetadata(context.Context, *TestSuiteMetadata) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SerializeSuiteMetadata not implemented")
}

func RegisterSuiteMetadataSerializingServiceServer(s *grpc.Server, srv SuiteMetadataSerializingServiceServer) {
	s.RegisterService(&_SuiteMetadataSerializingService_serviceDesc, srv)
}

func _SuiteMetadataSerializingService_SerializeSuiteMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestSuiteMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SuiteMetadataSerializingServiceServer).SerializeSuiteMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api_client.SuiteMetadataSerializingService/SerializeSuiteMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SuiteMetadataSerializingServiceServer).SerializeSuiteMetadata(ctx, req.(*TestSuiteMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

var _SuiteMetadataSerializingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api_client.SuiteMetadataSerializingService",
	HandlerType: (*SuiteMetadataSerializingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SerializeSuiteMetadata",
			Handler:    _SuiteMetadataSerializingService_SerializeSuiteMetadata_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "suite_metadata_serializing_service.proto",
}
